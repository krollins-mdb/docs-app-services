.. _realm-sync-migrate-modes:

=========================
Migrate Device Sync Modes
=========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 3
   :class: singlecol

Atlas App Services Apps can have one of two Device Sync modes: Partition-Based Sync
and Flexible Sync. Partition-Based Sync is an older mode and you should consider
migrating to Flexible Sync.

Migrating an App that uses Partition-Based Sync to Flexible Sync is an automatic
process. Other than upgrading the SDK version, migrating sync modes doesn't require 
any changes to your client app code. Your App's backend will automatically translate
the client's Partition-Based Sync requests into Flexible Sync.

Migrating results in Partition-Based Sync clients communicating with a
Flexible Sync Atlas App Services App.

Requirements
------------

Your App Services App:

- Must currently use Partition-Based Sync

Linked Atlas Cluster:

- Must be running mongodb 5.0+ for Flexible Sync compatibility
- Must have storage auto-scaling enabled
- Must be M10+ to access this setting
- Must have time-based oplog setting enabled

Client Apps:

- ``realm-core`` vTBD+, which means these SDK versions: TBD

.. _realm-sync-migrate-what-to-know:

What to Know Before migrating
-----------------------------

Migrating your App's Sync mode involves changes that affect both client apps and
your App's backend. You should be aware of the side effects and plan ahead.

How long a migration takes is directly proportional to the amount of data that
needs to be migrated. The more data, the longer it will take to migrate.

Migrations are not permenant immediately after completion. They can be canceled
during the migration or rolled back within a certain timeframe after the migration
is finished.

Progress notifications will not work after migration because Flexible Sync does
not yet support them.

Client apps that use an SDK with with a realm-core version lower than TBD will
experience a client reset after migration. You should use a 
:ref:`client reset <handle-a-client-reset>` handler with recovery enabled.

.. _realm-sync-migrate-stages:

Migration Stages
~~~~~~~~~~~~~~~~

There are three stages to a Sync mode migration. You can see your migration's
stage in the App Services UI.

#. Disabling Partition-Based Sync
   
   At this stage, client apps can connect to your App's backend, but local writes 
   will not sync. These writes will be lost if you don't have a 
   :ref:`client reset handler <handle-a-client-reset>` to recover unsynced changes.
	 
   Clients can also receive updates to MongoDB data, but they won't
   be able to recieve upload acknowledgements.

#. Initializing Flexible Sync
   
   Clients cannot connect at this stage. The time this takes is directly
   proportional to the amount of data in synced collections.

#. Migration completed

   **Manage sync migration** appears on Sync page if the migration hasn't been 
   committed or rolled back. This button lets admins commit or roll back manually.

Migrate Partition-Based Sync App to Flexible Sync
-------------------------------------------------

After beginning migration from Partition-Based Sync to Flexible Sync, the process
is mostly automatic. However, you can control important parts of the migration.

During a migration, you can cancel it. After a migration, you can roll it back 
or manually commit the migration.

Begin Migration
~~~~~~~~~~~~~~~

Before you begin a migration, make sure you're aware of the
:ref:`migration stages <realm-sync-migrate-stages>` and
:ref:`effects <realm-sync-migrate-what-to-know>`.

During migration, client apps may experience side effects, most of which are similar
to what happens if you disable and re-enable sync. These are some additional
side effects of migration:

- In the App Services UI, the Rules and Schemas pages will be unresponsive.
- Your App Services Appp will experience a period of read-only sync and then a 
  period of downtime.
- If Partition-Based Sync default client max offline time is unset, the new
  Flexible Sync config will set it to 30 days.
- Storage in your Atlas cluster used by sync is temporarily doubled. Partition-Based
  Sync and Flexible Sync must temporarily co-exist. Depending on the size of your
  synced data, this could affect billing every time you migrate.

To migrate from Partition-Based Sync to Flexible Sync:

#. In the App Services UI, go to your App and select the Device Sync page.
#. At the top of the page, select :guilabel:`[Migrate to Flexible Sync]`.
#. Read the information about migrating, then select 
   :guilabel:`[Next: Migration Requirements]`.
#. Ensure you meet the migration requirements, the select 
   :guilabel:`[Start Migration]`.

   .. image:: /images/begin-migration.png
      :alt: Begin a migration


After a migration is completed, Partition-Based Sync client apps can communicate
with your App's Flexible Sync backend. You can disable and re-enable Flexible Sync,
but if you re-enable Partitition-Based Sync you will need to do another migration
to enable Flexible Sync later on.

Migrate Permissions and Rules
`````````````````````````````

Your App's permissions and rules will be automatically migrated if the Partition-Based
Sync rules have direct App Services Rules equivalents. This will override
previously-defined App Services Rules.

Some Partition-Based Sync rule strategies can't translate directly to App Services
Rules. You may need to manually migrate rules with these characteristics:

- Rules that include :json-expansion:`%%partition`. 
  
  App Services Rules do not have an equivalent expansion.
  :ref:`Function rules <pbs-function-rules>` used with :json-expansion:`%%partition`
  cannot be migrated.

- Rules that include recursing operators (``%or``, ``%not``, ``%nor``, ``%and``).

  These rules may work, but there is enough nuance that you should test them
  to ensure expected behavior. Testing new rules won't work on the App
  you are migrating. You'll need a new app to test manually-migrated rules.

Refer to the :ref:`Partiton-Based Sync <pbs-rule-migration>` reference for examples
of how to map Partition-Based Sync rules to App Services rules.

Cancel Migration
~~~~~~~~~~~~~~~~

You can cancel a migration at any time while it is in progress. This will return
your App the Partition-Based Sync, with all settings as they were before the
migration started.

If you cancel a migration, you need to start over from the beginning with future
migration attempts.

To cancel a migration:

#. In the App Services UI, go to your App and select the Device Sync page.
#. At the top of the page, in the notification banner, select
   :guilabel:`[Stop Migration]`.
   This will cancel your migration. You will need to migrate again if you want to
   enable Flexible Sync in the future.
   
   .. image:: /images/cancel-migration.png
      :alt: Cancel a migration

Commit Migration
~~~~~~~~~~~~~~~~

After your migration has completed, it is in an evaluation state. You can manually
commit the migration to make it permanent or roll back the migration to return your
App to Partiton-Based Sync.

If you don't commit or roll back the migration, it will automatically commit
according to your 
:atlas:`minimum oplog window </atlas/cluster-additional-settings/#set-minimum-oplog-window>`. 
For example, if your minimum oplog window is 48 hours, you will 48 hours to
roll back your migration.

After a migration is committed, the old Partition-Based Sync metadata is deleted
and you cannot roll back the migration.

To manually commit a migration:

#. In the App Services UI, go to your App and select the Device Sync page.
#. At the top of the page, select the three dots next to 
   :guilabel:`[Manage Sync Migration]`.
#. From the list of options, select 
   :guilabel:`[Delete Partition-Based Sync metadata]`.
   This will commit your migration and you will not be able to recover your
   Partition-Based Sync Metadata.

   .. image:: /images/commit-migration.png
      :alt: Commit a migration

Roll Back Migration
~~~~~~~~~~~~~~~~~~~

You can roll back a migration after it has completed and before it has been committed.

Completed migrations are automatically committed when the PBS translator falls 
off of the oplog.

You can increase or decrease the migration roll back window by adjusting the
:atlas:`minimum oplog window </atlas/cluster-additional-settings/#set-minimum-oplog-window>`.

You cannot roll back a migration that has been committed.

Similar to cancelling a migration, if you roll back a migration, you need to 
start over from the beginning with future migration attempts.

To roll back a migration:

#. In the App Services UI, go to your App and select the Device Sync page.
#. At the top of the page, select the three dots next to 
   :guilabel:`[Manage Sync Migration]`.
#. From the list of options, select 
   :guilabel:`[Revert back to Partition-Based Sync]`.
   This will roll back your migration. You will need to migrate again if you 
   want to enable Flexible Sync in the future.

   .. image:: /images/roll-back-migration.png
      :alt: Roll back a migration
