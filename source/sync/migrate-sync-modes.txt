.. _realm-sync-migrate-modes:

=========================
Migrate Device Sync Modes
=========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 3
   :class: singlecol

Atlas App Services Apps can have one of two Device Sync modes: Partition-Based Sync
and Flexible Sync. Partition-Based Sync is an older mode and you should consider
migrating to Flexible Sync.

Migrating an App that uses Partition-Based Sync to Flexible Sync is an automatic
process. Other than upgrading the SDK version, migrating Sync modes doesn't require 
any changes to your client app code.

Migration results in Partition-Based Sync clients communicating with a
Flexible Sync backend. We recommend eventually migrating your client apps to also
use Flexible Sync instead of Partition-Based Sync.

Requirements
------------

App Services App:

- Currently use Partition-Based Sync

Linked Atlas Cluster:

- Use MongoDB 5.0 or later for Flexible Sync compatibility
- Have storage auto-scaling enabled
- Be an M10+ Cluster Tier
- Have time-based oplog setting enabled

Client apps:

- Use ``realm-core`` vTBD+, which means these SDK versions: TBD

.. _realm-sync-migrate-what-to-know:

What to Know Before Migrating
-----------------------------

Migrating your App's Sync mode involves changes that affect both client apps and
your App's backend. You should be aware of the side effects and plan ahead.

- How long a migration takes is directly proportional to the amount of data that
  needs to be migrated. The more data, the longer it will take to migrate.
- Migrations can be :ref:`canceled <realm-sync-migrate-cancel>` during the 
  migration or :ref:`reverted <realm-sync-migrate-revert>` within a certain 
  timeframe after the migration is finished.
- Progress notifications will not work after migration because Flexible Sync does
  not support them.
- Client apps that use an SDK with with a realm-core version lower than TBD will
  experience a client reset after migration. You should use a 
  :ref:`client reset <handle-a-client-reset>` handler with recovery enabled.
- :ref:`Development Mode <development-mode>` is not supported during a migration.

.. _realm-sync-migrate-stages:

Migration Stages
~~~~~~~~~~~~~~~~

There are three stages to a Sync mode migration. You can see your migration's
stage in the App Services UI.

#. **Syncing Partition-Based Sync metadata** 
   
   At this stage, client apps can connect to your App's backend, but local writes 
   will not sync. These writes will be lost if you don't have a 
   :ref:`client reset handler <handle-a-client-reset>` to recover unsynced changes.
	 
   Clients can also receive updates to synced collections, but they won't
   be able to receive upload acknowledgements.

#. **Building Flexible Sync metadata** 
   
   Clients cannot connect at this stage. The duration of this stage is directly
   proportional to the amount of data in synced collections.

#. **Completed migration** 

   :guilabel:`Manage Sync Migration` appears on the Device Sync page if the 
   migration hasn't been committed or reverted.

Migrate Partition-Based Sync to Flexible Sync
---------------------------------------------

After beginning migration from Partition-Based Sync to Flexible Sync, the process
is mostly automatic. However, you can control important parts of the migration.

During a migration, you can cancel it. After a migration, you can revert it 
or manually commit the migration.

Begin Migration
~~~~~~~~~~~~~~~

Before you begin a migration, make sure you're aware of the
:ref:`migration stages <realm-sync-migrate-stages>` and
:ref:`effects <realm-sync-migrate-what-to-know>`.

During migration, client apps may experience side effects, most of which are similar
to what happens if you :ref:`terminate <terminating-realm-sync>` and re-enable
Device Sync. These are some additional side effects of migration:

- In the App Services UI, the Rules and Schema pages will be read-only.
- Your App will experience a period of read-only Sync and then a 
  period of downtime.
- The new Flexible Sync configuration will set 
  :ref:`client max offline time <client-maximum-offline-time>` to 30 days.
- Storage in your Atlas cluster used by Device Sync metadata is temporarily doubled.
  Partition-Based Sync metadata and Flexible Sync metadata must temporarily co-exist. 
  Depending on the size of your synced data, this could affect billing every time you
  migrate.

**To migrate from Partition-Based Sync to Flexible Sync:** 

#. In the App Services UI, go to your App and select the Device Sync page.
#. At the top of the page, select :guilabel:`[Migrate to Flexible Sync]`.
   
   .. image:: /images/begin-migration.png
      :alt: Begin a migration
   
#. Read the information about migrating, then select 
   :guilabel:`Next: Migration Requirements`.
#. Ensure you meet the migration requirements, the select 
   :guilabel:`Start Migration`.

   Clients will not be able to sync their local writes until the migration has
   completed.

After a migration is completed, Partition-Based Sync client apps can communicate
with your App's Flexible Sync backend. You can disable and re-enable Flexible Sync
and client apps will still communicate with your backend.

If you re-enable Partitition-Based Sync you will lose the "migrated" status.
This means you'll need to to another migration if you want to use Flexible Sync
on the backend with Partition-Based Sync client apps.

Migrate Permissions and Rules
`````````````````````````````

Your App's permissions and rules will be automatically migrated if the Partition-Based
Sync rules have direct App Services Rules equivalents. This will override
previously-defined App Services Rules.

In step 4 above, you will see if your permissions and rules can be automatically
migrated. On the :guilabel:`Review Migration Process` step in the App Services UI,
look for :guilabel:`Rules & Permisssions`.

Some Partition-Based Sync rule strategies can't translate directly to App Services
Rules. You may need to manually migrate rules that include:

- :json-operator:`%function` operator.

  :ref:`Function rules <pbs-function-rules>` are not compatible with Flexible Sync 
  and cannot be migrated.

- :json-expansion:`%%partition` expansion.

  App Services Rules do not have an equivalent expansion for  
  :json-expansion:`%%partition`, so it cannot be migrated.

- ``%or``, ``%not``, ``%nor``, ``%and`` expansions.

  These rules may work, but there is enough nuance that you should test them
  to ensure expected behavior. Testing new rules won't work on the App
  you are migrating. You'll need a new app to test manually-migrated rules.

See the list of :ref:`Flexible Sync-compatible expansions <sync-compatible-expansions>`
for all supported expansions.

You should also check out the 
:ref:`Device Sync Permissions Guide <flexible-sync-permissions-guide>` for more
information about how to work with permissions.

.. _realm-sync-migrate-cancel:

Cancel Migration
~~~~~~~~~~~~~~~~

You can cancel a migration at any time while it is in progress. This will return
your App the Partition-Based Sync, with all settings as they were before the
migration started.

If you cancel a migration, you need to start over from the beginning with future
migration attempts.

**To cancel a migration:** 

#. In the App Services UI, go to your App and select the Device Sync page.
#. At the top of the page, in the notification banner, select
   :guilabel:`Stop Migration`.
   
   .. image:: /images/cancel-migration.png
      :alt: Cancel a migration
   
   This will cancel your migration. You will need to migrate again if you want to
   enable Flexible Sync in the future.

.. _realm-sync-migrate-commit:

Commit Migration
~~~~~~~~~~~~~~~~

After your migration has completed, it is in an evaluation state. You can manually
commit the migration to make it permanent or revert the migration to return your
App to Partiton-Based Sync.

If you don't commit or revert the migration, it will automatically commit
according to your 
:atlas:`minimum oplog window </atlas/cluster-additional-settings/#set-minimum-oplog-window>`. 
For example, if your minimum oplog window is 48 hours, you will have 48 hours to
revert your migration.

After a migration is committed, the old Partition-Based Sync metadata is deleted
and you cannot revert the migration.

**To manually commit a migration:** 

#. In the App Services UI, go to your App and select the Device Sync page.
#. At the top of the page, select the three dots next to 
   :guilabel:`Manage Sync Migration`.
#. From the list of options, select 
   :guilabel:`Delete Partition-Based Sync metadata`.
   
   .. image:: /images/commit-migration.png
      :alt: Commit a migration
   
   This will commit your migration and you will not be able to recover your
   Partition-Based Sync Metadata.

.. _realm-sync-migrate-revert:

Revert Migration
~~~~~~~~~~~~~~~~

You can revert a migration after it has completed and before it has been committed.

Completed migrations are automatically committed in accordance with your 
:atlas:`minimum oplog window </atlas/cluster-additional-settings/#set-minimum-oplog-window>`.
You can increase or decrease the amount of time you have to 
revert a migration by adjusting the minimum oplog window.

You cannot revert a migration that has been committed.

Similar to canceling a migration, if you revert a migration, you need to 
start over from the beginning with future migration attempts.

**To revert a migration:** 

#. In the App Services UI, go to your App and select the Device Sync page.
#. At the top of the page, select the three dots next to 
   :guilabel:`Manage Sync Migration`.
#. From the list of options, select 
   :guilabel:`Revert back to Partition-Based Sync`.
   
   .. image:: /images/roll-back-migration.png
      :alt: Revert a migration
   
   This will revert your migration. You will need to migrate again if you 
   want to enable Flexible Sync in the future.
